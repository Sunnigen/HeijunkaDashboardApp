@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Timeline";
}
@using Syncfusion.EJ2
<div class="control-section">
    <div class="content-wrapper">
        <div class="title-container">
                <h2 class="title-text">Info/Events</h2>
            </div>   
        <label>There are @ViewBag.Owners.Count Queues at the moment</label>
        <div class="schedule-container">
            <div class="title-container">
                <h2 class="title-text">Digital Heijunka</h2>
            </div>           

            <!--
              Html.EJS().Schedule("schedule").Width("100%").Height("650px").CssClass("schedule-drag-drop").Views(view => { view.Option(View.TimelineDay).Add(); view.Option(View.TimelineMonth).Add(); }).CurrentView(View.TimelineDay).SelectedDate(new DateTime(DateTime.Today.Year, 7, 2)).WorkHours(new ScheduleWorkHours { Highlight = true, Start = "08:00", End = "18:00" }).Group(group => group.EnableCompactView(false).Resources(ViewBag.Resources)).Resources(res =>
                    {
                        res.DataSource(ViewBag.Departments).Field("DepartmentID").Title("Department").Name("Departments").TextField("text").IdField("id").ColorField("color").Add();
                        res.DataSource(ViewBag.Consultants).Field("ConsultantID").Title("Consultant").Name("Consultants").TextField("text").IdField("id").ColorField("color").GroupIDField("groupId").AllowMultiple(false).Add();
                    }).ResourceHeaderTemplate("#resource-template").ActionBegin("OnActionBegin").Drag("OnItemDrag").EventSettings(e => e.Fields(f => f.Subject(sub => sub.Name("Name").Title("Patient Name")).StartTime(start => start.Name("StartTime").Title("From")).EndTime(end => end.Name("EndTime").Title("To")).Description(des => des.Name("Description").Title("Reason"))).DataSource(ViewBag.datasource)).Render()
                    -->
            <ejs-schedule id="schedule" height="100%" width="100%" views="@ViewBag.view" selectedDate="new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day)">
                <!-- Set the Hour and Date Rows  -->
                <e-schedule-header-rows>
                    <e-schedule-header-row option="Date"></e-schedule-header-row>
                    <e-schedule-header-row option="Hour"></e-schedule-header-row>
                </e-schedule-header-rows>

                <!-- Set the Timeline View -->
                <e-schedule-views>
                    <e-schedule-view option="TimelineWeek" ></e-schedule-view>
                </e-schedule-views>

                <!-- Set the Resources for Different Queues -->
                <e-schedule-group resources="@ViewBag.Resources"></e-schedule-group>
                <e-schedule-resources id="scheduleresources">
                    <e-schedule-resource  dataSource="@ViewBag.Owners" field="OwnerId" title="Owners" name="Owners" textField="Text" idField="Id" colorField="Color"></e-schedule-resource>
                </e-schedule-resources>

                <!-- Insert Existing Parts in Process -->
                <e-schedule-eventsettings dataSource="@ViewBag.datasource"></e-schedule-eventsettings>
            </ejs-schedule>

            <ejs-button id="button" onclick="addQueue()" numberOfQueues="@ViewBag.Owners.Count" content="Add Queue"></ejs-button>
            <ejs-button id="button1" onclick="removeQueue()" content="Remove Queue"></ejs-button>
            <button onclick="OwnerTest()">Click Meeee!</button>
        </div>
        <!-- Staging Area for Parts to Process -->
        <div class="treeview-container">
            <div class="title-container">
                <h2 class="title-text">Staging Area</h2>
                <!--Html.EJS().TreeView("tree").Fields(fields => fields.DataSource(ViewBag.treeDataSource).Id("Id").Text("Name")).AllowDragAndDrop(true).NodeDragStop("OnTreeDragStop").NodeDragging("OnItemDrag").NodeTemplate("#treeTemplate").DragArea(".content-wrapper").CssClass("treeview-external-drag").Render()-->
                <!-- <ejs-treeview id="treeview" fields="@ViewBag.Fields" allowDragAndDrop="true" ></ejs-treeview> -->                                   
            </div>
            <!-- Html.EJS().TreeView("listdata").Fields(field=>field.Id("id").ParentID("pid").Selected("selected").Expanded("expanded").Text("name").HasChildren("hasChild").DataSource(ViewBag.DataSource)).Render() -->
            @Html.EJS().TreeView("tree").Fields(Fields => Fields.DataSource(ViewBag.DataSource).Id("Id").Text("Name")).AllowDragAndDrop(true).NodeDragStop("OnTreeDragStop").NodeDragging("OnItemDrag").NodeTemplate("#treeTemplate").DragArea(".content-wrapper").CssClass("treeview-external-drag").Render()
        </div>
    </div>
</div>

<style>
    .content-wrapper{
        display:-ms-flexbox;
        display:flex;
    }
    .e-device-hover {
        background-color: #e0e0e0 !important;
    }

    .schedule-container {
        padding-right: 10px;
        width: 100%;
    }
        
    .e-location-container{
        float: right;
    }
    .title-container {
        padding-bottom: 10px;
    }

    .title-text {
        font-size: 18px;
        margin: 0px;
        font-weight: bold;
        text-align: center;
    }

    .treeview-external-drag #waiting {
        height: 100%;
        padding: 0;
    }

    .treeview-external-drag #waitdetails {
        width: 95%;
        float: left;
        height: 100%;
        padding: 0;
    }

    .treeview-external-drag #waitlist {
        width: 100%;
        height: 50%;
        font-weight: bold;
        font-family: "Segoe UI";
        font-size: 12px;
        padding: 5px 0 0 10px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .treeview-external-drag #waitcategory {
        height: 50%;
        font-family: "Segoe UI";
        font-size: 10px;
        opacity: 0.6;
        padding-left: 10px;
        padding-top: 5px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .treeview-external-drag .e-list-text,
    .e-bigger .treeview-external-drag .e-list-text {
        border: 0.5px solid #E1E7EC;
        height: 50px;
        line-height: 15px;
        padding: 0 5px;
        width: 220px;
    }

    .treeview-external-drag .e-list-parent,
    .e-bigger .treeview-external-drag .e-list-parent {
        height: 100%;
        padding: 0 2px;
    }

    .treeview-external-drag .e-list-item,
    .e-bigger .treeview-external-drag .e-list-item {
        height: 100%;
        padding: 0 0 5px 0;
    }

    .treeview-external-drag .e-fullrow,
    .e-bigger .treeview-external-drag .e-fullrow {
        height: 55px;
    }

    .treeview-external-drag .e-list-item.e-hover > .e-fullrow,
    .treeview-external-drag .e-list-item.e-active > .e-fullrow,
    .treeview-external-drag .e-list-item.e-active.e-hover > .e-fullrow,
    .e-bigger .treeview-external-drag .e-list-item.e-hover > .e-fullrow,
    .e-bigger .treeview-external-drag .e-list-item.e-active > .e-fullrow,
    .e-bigger .treeview-external-drag .e-list-item.e-active.e-hover > .e-fullrow {
        background-color: transparent;
        border-color: transparent;
        box-shadow: none !important;
    }

    .treeview-external-drag .e-text-content,
    .e-bigger .treeview-external-drag .e-text-content {
        padding: 0;
    }

    .e-drag-item.e-treeview.treeview-external-drag,
    .e-bigger .e-drag-item.e-treeview.treeview-external-drag {
        padding: 0 !important;
    }

    .e-schedule.schedule-drag-drop .e-timeline-view .e-resource-left-td,
    .e-schedule.schedule-drag-drop .e-timeline-month-view .e-resource-left-td {
        width: 160px;
    }

    .e-schedule.schedule-drag-drop .e-resource-cells.e-parent-node .specialist-category {
        padding-left: 30px
    }

    .e-schedule.e-rtl.schedule-drag-drop .e-resource-cells.e-parent-node .specialist-category {
        padding-right: 30px
    }

    .e-schedule.schedule-drag-drop .e-resource-cells.e-child-node .specialist-category,
    .e-schedule.schedule-drag-drop .e-resource-cells.e-child-node .specialist-name {
        padding: 5px
    }

    .tailwind .e-schedule.schedule-drag-drop .e-resource-cells.e-child-node .specialist-category,
    .tailwind .e-schedule.schedule-drag-drop .e-resource-cells.e-child-node .specialist-name,
    .tailwind-dark .e-schedule.schedule-drag-drop .e-resource-cells.e-child-node .specialist-category,
    .tailwind-dark .e-schedule.schedule-drag-drop .e-resource-cells.e-child-node .specialist-name {
        padding: unset !important;
    }

    .e-schedule.schedule-drag-drop .e-resource-cells.e-parent-node .specialist-name {
        padding: 0 10px
    }

    .e-schedule.schedule-drag-drop .e-resource-cells.e-parent-node .template-wrap {
        padding: 3px 0px;
    }

    .e-schedule.schedule-drag-drop .e-resource-cells.e-child-node .specialist-category .specialist-image {
        width: 45px;
        height: 40px;
        float: left;
        border-radius: 50%;
        margin-right: 10px;
    }

    .e-schedule.schedule-drag-drop .specialist-name {
        font-size: 13px;
    }

    .e-schedule.schedule-drag-drop .specialist-designation {
        font-size: 10px;
    }

    .e-schedule-dialog .e-all-day-time-zone-row,
    .e-schedule-dialog .e-location-container,
    .e-bigger .e-schedule-dialog .e-all-day-time-zone-row,
    .e-bigger .e-schedule-dialog .e-location-container {
        display: none;
    }

    .e-schedule-dialog .e-subject-container,
    .e-bigger .e-schedule-dialog .e-subject-container {
        padding-right: 0;
        width: 100%;
    }

    .e-schedule-dialog.e-rtl .e-subject-container,
    .e-bigger .e-schedule-dialog.e-rtl .e-subject-container {
        padding-left: 0;
    }

    @@media (max-width: 550px) {


        .treeview-external-drag.e-treeview,
        .e-bigger .treeview-external-drag.e-treeview {
            width: 225px;
        }

            .e-bigger .treeview-external-drag.e-treeview.e-drag-item {
                position: relative !important;
            }
    }
</style>

<!-- Template to render tree node -->
<script id="treeTemplate" type="text/x-template">
    <div id="waiting">
        <div id="waitdetails">
            <div id="waitlist">${Name}</div>
            <div id="waitcategory">${DepartmentName} - ${Description}</div>
        </div>
    </div>
</script>

<!-- Resource Header Template -->
<script id="resource-template" type="text/x-template">
    <div class="template-wrap">
        <div class="specialist-category">
            ${getConsultantImage(data)}
            <div class="specialist-name">${getConsultantName(data)}</div>
            <div class="specialist-designation">${getConsultantDesignation(data)}</div>
        </div>
    </div>
</script>

<script type="text/javascript">

    function getConsultantName(value) {
        return value.resourceData[value.resource.textField];
    };

    function getConsultantImage(value) {
        var resourceName = value.resourceData[value.resource.textField];
        if (resourceName === 'GENERAL' || resourceName === 'DENTAL') {
            return '';
        } else {
            var path = "@Url.Content("~/Content/schedule/images/")";
            var src = path + resourceName.toLowerCase() + ".png";
            return '<img class="specialist-image" src=' + src + '></img>';
        }
    };

    function getConsultantDesignation(value) {
        var resourceName = value.resourceData[value.resource.textField];
        if (resourceName === 'GENERAL' || resourceName === 'DENTAL') {
            return '';
        } else {
            return value.resourceData.designation;
        }
    };

    var isTreeItemDropped = false;
    var draggedItemId = '';

    function OnItemDrag(event) {
        var scheduleObj = document.querySelector(".e-schedule").ej2_instances[0];
        if (scheduleObj.isAdaptive) {
            var classElement = scheduleObj.element.querySelector('.e-device-hover');
            if (classElement) {
                classElement.classList.remove('e-device-hover');
            }
            if (event.event.target.classList.contains('e-work-cells')) {
                ej.base.addClass([event.event.target], 'e-device-hover');
            }
        }
        document.body.style.position = 'fixed';
        if (document.body.style.cursor === 'not-allowed') {
            document.body.style.cursor = '';
        }
        if (event.name == 'nodeDragging') {
            var dragElementIcon = document.querySelectorAll('.e-drag-item .e-icon-expandable');
            for (var i = 0; i < dragElementIcon.length; i++) {
                dragElementIcon[i].style.display = 'none';
            }
        }
    }

    function OnActionBegin(event) {
        if (event.requestType === 'eventCreate' && isTreeItemDropped) {
            var treeObj = document.querySelector(".e-treeview.treeview-external-drag").ej2_instances[0];
            var treeViewdata = treeObj.fields.dataSource;
            var filteredPeople = treeViewdata.filter(function (item) { return item.Id !== parseInt(draggedItemId, 10); });
            treeObj.fields.dataSource = filteredPeople;
            var elements = document.querySelectorAll('.e-drag-item.treeview-external-drag');
            for (var i = 0; i < elements.length; i++) {
                remove(elements[i]);
            }
        }
    }

    function OnTreeDragStop(event) {
        var treeElement = ej.base.closest(event.target, '.e-treeview');
        var scheduleObj = document.querySelector(".e-schedule").ej2_instances[0];
        var classElement = scheduleObj.element.querySelector('.e-device-hover');
        if (classElement) {
            classElement.classList.remove('e-device-hover');
        }
        if (!treeElement) {
            event.cancel = true;
            var scheduleElement = ej.base.closest(event.target, '.e-content-wrap');
            if (scheduleElement) {
                var treeviewData = this.fields.dataSource;
                if (event.target.classList.contains('e-work-cells')) {
                    var filteredData =
                        treeviewData.filter(function (item) { return item.Id === parseInt(event.draggedNodeData.id, 10); });
                    var cellData = scheduleObj.getCellDetails(event.target);
                    var resourceDetails = scheduleObj.getResourcesByIndex(cellData.groupIndex);
                    var eventData = {
                        Name: filteredData[0].Name,
                        StartTime: cellData.startTime,
                        EndTime: cellData.endTime,
                        IsAllDay: cellData.isAllDay,
                        Description: filteredData[0].Description,
                        DepartmentID: resourceDetails.resourceData.groupId,
                        ConsultantID: resourceDetails.resourceData.id
                    };
                    scheduleObj.openEditor(eventData, 'Add', true);
                    isTreeItemDropped = true;
                    draggedItemId = event.draggedNodeData.id;
                }
            }
        }
    }
</script>


<!--
<script type="text/javascript">
    function removeQueue() {
        var scheduleObj = document.getElementById('schedule').ej2_instances[0];
        scheduleObj.removeResource(1,'Owners');
        
        var test = @ViewBag.Owners.Count;
        console.log(test);
    }

    function addQueue() {
        var scheduleObj = document.getElementById('schedule').ej2_instances[0];

        let numberofQueues = event.target.getAttribute('numberOfQueues');
        //ownerData.Add(new OwnerModel { Id = 3, Text = "Cutting Edge 3", Color = "#7499e1" });
        var collection = [
            {Id: 4, Text: `Cutting Edge ${numberofQueues}`, Color: "#7499e1"}
        ]
        // addResource(resource object, resource name, index)
        console.log(numberofQueues);
        scheduleObj.addResource(collection[0],'Owners', numberofQueues);
    }

    function OwnerTest() {
        var complexObject = {
            Id: 1,
            Text: 'Hello World!',
            Color: 'Red'
        };

        $.ajax({
            type: "POST",
            url: "Heijunka/TestFunction1",
            data: complexObject,
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (arg) {
              alert(arg);
              console.log(arg);
            },
            error: function (xhr) {
                alert("ERROR!!");
                alert(xhr);
            }
        });
    };
</script> -->